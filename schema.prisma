generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["jsonProtocol"]
}

datasource db {
    provider  = "postgresql"
    url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
    directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

model User {
    id               Int         @id @default(autoincrement())
    name             String?     @db.VarChar(255)
    username         String?     @db.VarChar(50)
    addressId        Int?
    password         String?     @db.VarChar(255)
    email            String      @unique @db.VarChar(255)
    phone            String?     @db.VarChar(15)
    avatar           String?     @db.VarChar(255)
    isOnbordered     Boolean     @default(false)
    isActive         Boolean     @default(true)
    isSocialAuth     Boolean     @default(false)
    isAccessPassword Boolean     @default(false)
    role             String?     @db.VarChar(15)
    useCase          String?     @db.VarChar(50)
    onboardingStep   Json        @default("{\"profile_complete\":false,\"workspace_create\":false,\"workspace_invite\":false,\"workspace_join\":false}")
    createdAt        DateTime    @default(now()) @db.Timestamp(6)
    workspaces       Workspace[]
}

model Workspace {
    id        Int      @id @default(autoincrement())
    name      String?  @db.VarChar(255)
    companyId Int?
    isActive  Boolean  @default(true)
    logo      String?  @db.VarChar(255)
    slug      String   @unique @db.VarChar(30)
    createdAt DateTime @default(now()) @db.Timestamp(6)
    ownerId   Int
    User      User?    @relation(fields: [ownerId], references: [id])
}
